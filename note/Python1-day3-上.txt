Python1-day3-上
1、文件操作
	- open() 函数
	- 用于打开一个文件，创建一个 file 对象，相关的方法才可以调用它进行读写。
	
	- open(name[, mode[, buffering]])
		- name: 一个包含了你要访问的文件名称的字符串值。
		- mode: mode 决定了打开文件的模式：
			只读，写入，追加等。
			这个参数是非强制的，默认文件访问模式为只读(r)。
		- buffering: 
			如果 buffering 的值被设为 0，就不会有寄存。
			如果 buffering 的值取 1，访问文件时会寄存行。
			如果将 buffering 的值设为大于 1 的整数，表明了这就是的寄存区的缓冲大小。
			如果取负值，寄存区的缓冲大小则为系统默认。
	
	- 文件模式
		- r  读方式打开，文件不存在报错
		- w  写方式打开，文件不存在则创建、存在则清空
		- a	 追加模式打开，必要时创建新文件
		- r+	以读写模式打开 	参见r
		- w+ 	以读写模式打开	参见w
		- a+	以读写模式打开	参见a
		- b		以二进制模式打开
		
	- 方法
		- 读取
			- read()  直接读取字节到字符串中，可以设置每次读取的数目，默认到文件末尾
			- readline()	读取打开文件的一行(\n)
			- readlines()	读取所有剩余的行，返回字符串列表
			
			- 文件对象为iterable，可以直接用for进行迭代
		- 写入
			- write()	把含有文本数据或二进制数据块的字符串写入到文件中
						写入文件时需要手工加入换行符
			- writelines()	接受列表作为参数，也需要手工换行
			
	- with语句
		- 用于简化代码
		- 代码块结束后，文件自动关闭
	
	- 指针操作
		- seek(offset[,whence])
			- offset:偏移量，单位是字节，可正可负
			- whence:起始位置
						- 0 文件头
						- 1 当前位置
						- 2 文件末尾
		- tell()	打印当前指针位置
		
	- 关闭文件对象
		- close()	操作完文件对象以后一定要关闭文件文件对象
		
2、函数基础
	- 基本概念
		- 对程序逻辑进行结构化或过程化的一种编程方法
		- 将整个代码块隔离成易管理的小块
		- 避免大量的重复代码
		
	- 定义方法
		def function_name(argments):
			function_body
			
	- 调用函数
		func()
	
	- 函数返回值-->向调用者返回值
		- 使用return关键字
		- 函数体遇到return就停止
		- 没有return关键字默认返回None
			
			