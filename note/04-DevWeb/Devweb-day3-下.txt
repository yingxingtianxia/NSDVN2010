DevWeb-day3-下
1、视图函数和模板
	- 视图是URLconf路由到某一URL时执行的函数
	- 使用render函数调用模板
	- 路由声明
		- 可以使用path函数
		- 也可以使用re_path，就按照正则表达式来写
		- 路由做好以后创建对应的视图函数
		- 使用render调用templates目录下的HTML模板文件
	- 模板
		- HTML的网页的模板
		- 名称对应视图函数中的名字
		- 支持变量
2、ORM映射
	- 模型
		- 模型指出了数据唯一、明确的真实来源
		- 它包含了正在存储的数据的基本字段和行为
		- Django遵循DRY原则
		- 原则的目标就是在任意位置定义数据模型并自动获取需要的信息
		- 模型说明
			- 每个模型对应一个类，继承于django.db.modoles.Model
			- 每个模型都有一些类变量，代表数据库的字段
			- 通过Field类的一个实例表示一个字段
			- 每个Field实例的名字就是该字段的名字，且机器可读
			- 在Python代码中将使用到该值且作为数据的字段名
	- orm映射
		- 在models.py中创建数据库模型类
		- 通过python manager.py makemigrations自动生成映射关系
		- 通过python manager.py migrate生成数据库
	- on delete cascade 级联删除，删除主表的数据的时候外键表的数据同步删除
3、数据库管理
	- 命令规则
		- 表名
			- 全部采用小写字母
			- 应用名_类名
		- 字段名
			- 类变量
			- 外键字段是相应类变量+_id
		- 更改字段名
			- 先修改models.py里边的代码
			- 重新执行python manager.py makemigrations
			- 再执行python manager.py migrate
	- 注册模型
		- 修改app/admin.py
			- 从models.py导入数据库类
			- 用admin.site.register()注册
			- 后台默认显示为类对象（object）
		- 重写models模型
			- 用__str__魔法方法重写返回值
			- return '%s' self.xxx_text
		- 刷新后台显示






















